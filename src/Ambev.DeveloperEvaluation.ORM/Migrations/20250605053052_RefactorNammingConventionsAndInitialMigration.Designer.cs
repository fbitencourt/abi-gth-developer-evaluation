// <auto-generated />
using System;
using Ambev.DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250605053052_RefactorNammingConventionsAndInitialMigration")]
    partial class RefactorNammingConventionsAndInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("637bca77-4d2b-499e-bfe6-a0e5fa0e1257"),
                            CreatedAt = new DateTime(1986, 1, 28, 11, 39, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(1986, 1, 28, 11, 39, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("d3baf233-68da-4b9a-871a-8f0aa723101b"),
                            CreatedAt = new DateTime(1986, 4, 26, 1, 23, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(1986, 4, 26, 1, 23, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Products.Product", b =>
                {
                    b.OwnsOne("Ambev.DeveloperEvaluation.Domain.ValueObjects.Products.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<int>("Currency")
                                .HasMaxLength(3)
                                .HasColumnType("integer")
                                .HasColumnName("price_currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("price_value");

                            b1.HasKey("ProductId");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId")
                                .HasConstraintName("fk_products_products_id");

                            b1.HasData(
                                new
                                {
                                    ProductId = new Guid("637bca77-4d2b-499e-bfe6-a0e5fa0e1257"),
                                    Currency = 1,
                                    Value = 19.9m
                                },
                                new
                                {
                                    ProductId = new Guid("d3baf233-68da-4b9a-871a-8f0aa723101b"),
                                    Currency = 1,
                                    Value = 29.9m
                                });
                        });

                    b.OwnsOne("Ambev.DeveloperEvaluation.Domain.ValueObjects.Products.ProductImage", "Image", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("image_url");

                            b1.HasKey("ProductId");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId")
                                .HasConstraintName("fk_products_products_id");

                            b1.HasData(
                                new
                                {
                                    ProductId = new Guid("637bca77-4d2b-499e-bfe6-a0e5fa0e1257"),
                                    Url = "https://ambev.developer.evaluation/product1.jpg"
                                },
                                new
                                {
                                    ProductId = new Guid("d3baf233-68da-4b9a-871a-8f0aa723101b"),
                                    Url = "https://ambev.developer.evaluation/product2.jpg"
                                });
                        });

                    b.OwnsOne("Ambev.DeveloperEvaluation.Domain.ValueObjects.Products.ProductInfo", "Info", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("info_description");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("info_name");

                            b1.HasKey("ProductId");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId")
                                .HasConstraintName("fk_products_products_id");

                            b1.HasData(
                                new
                                {
                                    ProductId = new Guid("637bca77-4d2b-499e-bfe6-a0e5fa0e1257"),
                                    Description = "Description for Product 1",
                                    Name = "Product 1"
                                },
                                new
                                {
                                    ProductId = new Guid("d3baf233-68da-4b9a-871a-8f0aa723101b"),
                                    Description = "Description for Product 2",
                                    Name = "Product 2"
                                });
                        });

                    b.OwnsOne("Ambev.DeveloperEvaluation.Domain.ValueObjects.Products.SKU", "SKU", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("sku_value");

                            b1.HasKey("ProductId");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId")
                                .HasConstraintName("fk_products_products_id");

                            b1.HasData(
                                new
                                {
                                    ProductId = new Guid("637bca77-4d2b-499e-bfe6-a0e5fa0e1257"),
                                    Value = "PROD-001"
                                },
                                new
                                {
                                    ProductId = new Guid("d3baf233-68da-4b9a-871a-8f0aa723101b"),
                                    Value = "PROD-002"
                                });
                        });

                    b.Navigation("Image");

                    b.Navigation("Info");

                    b.Navigation("Price");

                    b.Navigation("SKU");
                });
#pragma warning restore 612, 618
        }
    }
}
